

CREATE TABLE EMPLOYEE_TABLE(Employee_ref_id INT PRIMARY KEY, First_name VARCHAR(20), Last_Name VARCHAR(20), Salary MONEY, Joining_date DATETIME, Department VARCHAR(20));

INSERT INTO EMPLOYEE_TABLE VALUES (1, 'Anika', 'Arora', 100000, '2020-02-14 9:00:00','HR');
INSERT INTO EMPLOYEE_TABLE VALUES (2, 'Veena', 'Velma', 30000, '2011-06-15 9:00:00', 'Admin');
INSERT INTO EMPLOYEE_TABLE VALUES (3, 'Vishal', 'Singhal', 300000, '2020-02-16 9:00:00', 'HR');
INSERT INTO EMPLOYEE_TABLE VALUES (4, 'Sushanth', 'Singh', 500000, '2020-02-17 9:00:00', 'Admin');
INSERT INTO EMPLOYEE_TABLE VALUES (5, 'Bhupal', 'Bhati', 500000, '2011-06-18 9:00:00', 'Admin');
INSERT INTO EMPLOYEE_TABLE VALUES (6, 'Dheeraj', 'Diwan', 200000, '2011-06-19 9:00:00', 'Account');
INSERT INTO EMPLOYEE_TABLE VALUES (7, 'Karan', 'Kumar', 75000, '2020-01-14 9:00:00', 'Account');
INSERT INTO EMPLOYEE_TABLE VALUES (8, 'Chandrika', 'Chauhan', 90000, '2011-04-15 9:00:00', 'Admin');


SELECT * FROM [dbo].[EMPLOYEE_TABLE];

CREATE TABLE EMPLOYEE_BONUS_TABLE(Employee_ref_id INT,Bonus_Amount MONEY,Bonus_Date DATETIME);

INSERT INTO EMPLOYEE_BONUS_TABLE VALUES(1, 5000, '2020-02-16 0:00:00' );
INSERT INTO EMPLOYEE_BONUS_TABLE VALUES(2, 3000, '2011-06-16 0:00:00' );
INSERT INTO EMPLOYEE_BONUS_TABLE VALUES(3, 4000, '2020-02-16 0:00:00' );
INSERT INTO EMPLOYEE_BONUS_TABLE VALUES(1, 4500, '2020-02-16 0:00:00' );
INSERT INTO EMPLOYEE_BONUS_TABLE VALUES(2, 3500, '2011-06-16 0:00:00' );

ALTER TABLE EMPLOYEE_BONUS_TABLE ADD CONSTRAINT FOREIGN_KEY FOREIGN KEY (Employee_ref_id) REFERENCES EMPLOYEE_TABLE(Employee_ref_id);

SELECT * FROM EMPLOYEE_BONUS_TABLE;

CREATE TABLE EMPLOYEE_TITLE_TABLE(Employee_ref_id INT , Employee_title VARCHAR(20), Affective_Date DATETIME);

INSERT INTO EMPLOYEE_TITLE_TABLE VALUES(1, 'Manager', '2016-02-20 0:00:00' );
INSERT INTO EMPLOYEE_TITLE_TABLE VALUES(2, 'Executive', '2016-06-11 0:00:00' );
INSERT INTO EMPLOYEE_TITLE_TABLE VALUES(8, 'Executive', '2016-06-11 0:00:00' );
INSERT INTO EMPLOYEE_TITLE_TABLE VALUES(5, 'Manager', '2016-06-11 0:00:00' );
INSERT INTO EMPLOYEE_TITLE_TABLE VALUES(4, 'Asst. Manager', '2016-06-11 0:00:00' );
INSERT INTO EMPLOYEE_TITLE_TABLE VALUES(7, 'Executive', '2016-06-11 0:00:00' );
INSERT INTO EMPLOYEE_TITLE_TABLE VALUES(6, 'Lead', '2016-06-11 0:00:00' );
INSERT INTO EMPLOYEE_TITLE_TABLE VALUES(3, 'Lead', '2016-06-11 0:00:00' );

SELECT * FROM EMPLOYEE_TITLE_TABLE;

SELECT FIRST_NAME AS EMPLOYEE_NAME FROM EMPLOYEE_TABLE;  -- Q1

SELECT UPPER(LAST_NAME) FROM EMPLOYEE_TABLE; --Q2

SELECT DISTINCT(DEPARTMENT) FROM EMPLOYEE_TABLE; --Q3

SELECT LEFT(LAST_NAME,3) FROM EMPLOYEE_TABLE; --Q4

SELECT DISTINCT(DEPARTMENT),LEN(Department) AS CHARACTER_LENGTH FROM EMPLOYEE_TABLE; --Q5

SELECT First_name+' '+Last_Name AS FULL_NAME FROM EMPLOYEE_TABLE; --Q6

SELECT * FROM EMPLOYEE_TABLE ORDER BY First_name ASC; --Q7

SELECT * FROM EMPLOYEE_TABLE ORDER BY Department DESC,First_name ASC; --Q8

SELECT * FROM EMPLOYEE_TABLE WHERE First_name = 'VEENA' OR First_name = 'KARAN'; --Q9

SELECT * FROM EMPLOYEE_TABLE WHERE Department = 'ADMIN'; --Q10

SELECT * FROM EMPLOYEE_TABLE WHERE LEFT(FIRST_NAME,1) = 'V'; --Q11

SELECT * FROM EMPLOYEE_TABLE WHERE Salary BETWEEN 100000 AND 500000; --Q12

SELECT * FROM EMPLOYEE_TABLE WHERE Joining_date BETWEEN '2020-02-01' AND '2020-02-28'; --Q13

SELECT * FROM EMPLOYEE_TABLE WHERE Salary >=50000 AND Salary<=100000; --Q14

SELECT * FROM EMPLOYEE_TABLE ET INNER JOIN EMPLOYEE_TITLE_TABLE ETT ON ET.Employee_ref_id=ETT.Employee_ref_id WHERE Employee_title = 'MANAGER'; --Q16

SELECT Department, COUNT(*) AS DUPLICATEVALUE FROM EMPLOYEE_TABLE GROUP BY Department HAVING COUNT(*) > 1;
SELECT Salary, COUNT(*) AS DUPLICATEVALUE FROM EMPLOYEE_TABLE GROUP BY Salary HAVING COUNT(*) > 1;
SELECT Employee_title, COUNT(*) AS DUPLICATEVALUE FROM EMPLOYEE_TITLE_TABLE GROUP BY Employee_title HAVING COUNT(*) > 1; --Q17

SELECT * FROM EMPLOYEE_TABLE WHERE Employee_ref_id %2 != 0; --Q18

SELECT * INTO NEW_TABLE FROM EMPLOYEE_TABLE; --Q19

SELECT DISTINCT TOP 2 Salary FROM EMPLOYEE_TABLE ORDER BY Salary DESC; --Q20

SELECT * FROM EMPLOYEE_TABLE WHERE SALARY = (SELECT Salary FROM EMPLOYEE_TABLE GROUP BY Salary HAVING COUNT(*) > 1); --Q21

SELECT * FROM (SELECT *,DENSE_RANK() OVER (ORDER BY SALARY DESC) AS RANKS FROM EMPLOYEE_TABLE) AS RANK_TABLE WHERE RANKS = 2; --Q22

SELECT TOP 50 PERCENT * FROM EMPLOYEE_TABLE; --Q23

SELECT * FROM EMPLOYEE_TABLE WHERE DEPARTMENT IN (SELECT Department FROM EMPLOYEE_TABLE GROUP BY Department HAVING COUNT(*)<4); -- Q24

SELECT DISTINCT DEPARTMENT,COUNT(*) AS NO_OF_EMPLOYEE FROM EMPLOYEE_TABLE GROUP BY Department; --Q25

SELECT * FROM EMPLOYEE_TABLE WHERE SALARY IN (SELECT MAX(SALARY) FROM EMPLOYEE_TABLE GROUP BY Department); --Q26

SELECT * FROM EMPLOYEE_TABLE WHERE SALARY = (SELECT MAX(SALARY) FROM EMPLOYEE_TABLE); --Q27

SELECT Department,AVG(SALARY) AS AVERAGE_SALARY FROM EMPLOYEE_TABLE GROUP BY Department; --Q28

SELECT * FROM EMPLOYEE_TABLE ET INNER JOIN EMPLOYEE_BONUS_TABLE EBT ON ET.Employee_ref_id=EBT.Employee_ref_id WHERE Bonus_Amount = (SELECT MAX(Bonus_Amount) FROM EMPLOYEE_BONUS_TABLE); --Q29

SELECT First_name,Employee_title FROM EMPLOYEE_TABLE ET INNER JOIN EMPLOYEE_TITLE_TABLE ETT ON ET.Employee_ref_id=ETT.Employee_ref_id; --Q30










